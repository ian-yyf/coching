@using Coching.Model;
@model CochingViewModel

@{
    ViewData["Title"] = Model.Project.Name;
}

<style>
    .out-container {
        height: calc(100vh - 70px);
    }

    .catalogue {
        width: 250px;
        background-color: #F7F7F7;
        overflow-y: auto;
        height: 100%;
        padding: 5px 0;
    }

        .catalogue::-webkit-scrollbar {
            width: 6px;
        }

        .catalogue::-webkit-scrollbar-thumb {
            border-radius: 6px;
            -webkit-box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
            background: #535353;
        }

        .catalogue::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
            background: #EDEDED;
        }

    .catalogue-item:hover {
        opacity: 0.8;
    }

    .add-button {
        position: fixed;
        bottom: 20px;
        left: 180px;
        border-radius: 50%;
        -webkit-box-shadow: 0 0 5px rgba(0,0,0,0.2);
        background-color: white;
        padding: 10px;
    }

        .add-button:hover {
            opacity: 0.8;
            cursor: pointer;
        }

    .tooltip-container {
        max-width: 300px;
    }

    .tooltip-title {
        color: white;
        text-align: center;
    }

    .tooltip-content {
        color: #eee;
        display: -webkit-box;
        overflow: hidden;
        white-space: normal !important;
        text-overflow: ellipsis;
        word-wrap: break-word;
        -webkit-line-clamp: 6;
        -webkit-box-orient: vertical;
        border-bottom: solid 1px white;
        border-top: solid 1px white;
        padding: 5px 0;
        margin: 5px 0;
    }

    .tooltip-status {
        text-align: right;
    }

        .tooltip-status img {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            margin-right: 10px;
        }
</style>

<script src="~/lib/echarts/echarts.min.js"></script>
<link rel="stylesheet" href="~/css/layui_menu.css">
<script src="~/js/layui_menu.js"></script>
<link rel="stylesheet" href="~/css/shared.css">
<link rel="stylesheet" href="~/views/coching/index.css">
<script src="~/views/coching/index.js?v=1.1"></script>

<div class="layout-row out-container">
    <div class="catalogue">
        @foreach (var root in Model.Roots)
        {
            <div id="@root.Node.ID" class="catalogue-item" onclick="root(this)">
                <div class="ellipsis-1 text-size-descrip text-color-common">@root.Node.Name</div>
                <div class="ellipsis-2 text-size-min text-color-descrip">@root.Node.Description</div>
                <div class="layout-row layout-center-h root-status">
                    <div class="workers layout-row layout-center-h flex">
                        @foreach (var partner in Model.Partners.Where(p => root.Workers.Contains(p.UserGuid)))
                        {
                            <img worker="@partner.User.ID" src="@Url.header(partner.User.Header)" title="@partner.User.Name" />
                        }
                    </div>
                    <div class="status-value text-size-descrip text-color-descrip status-color@(root.Node.Status)">@root.Node.StatusTitle</div>
                </div>
            </div>
        }
        <div class="add-button" onclick="add_root()">
            <img src="~/res/add.png" />
        </div>
    </div>
    <div class="tree-container flex">
        <div class="tree"></div>
        <div class="right-click-menu-pos"></div>
    </div>
</div>

<script>
    var init_data = {
        partners: function () {
            return eval(@Html.Raw(Model.getPartners()));
        },
        tree: function () {
            return '@Url.Action("Tree")';
        },
        root: function () {
            return '@Url.Action("Root")';
        },
        del: function () {
            return '@Html.Raw(Url.Action("DeleteNode"))';
        },
        right_menu: new LayuiMenu(),
        click: function (params) {
            layer.open({
                type: 2,
                title: '详情',
                maxmin: true,
                area: ['80%', '80%'],
                shadeClose: true,
                content: '@Html.Raw(Url.Action("NodeDetail"))' + '?id=' + params.data.id + '&notify=changed_notify',
            });
        },
        tooltip: true,
        me_id: function () {
            return '@Model.MyId';
        }
    }
</script>

<script>
    function add_root() {
        layer.open({
            type: 2,
            title: '添加任务',
            maxmin: true,
            area: ['80%', '80%'],
            shadeClose: true,
            content: '@Html.Raw(Url.Action("AddNode", new { projectGuid = Model.ProjectGuid, rootGuid = Guid.Empty, parentGuid = Guid.Empty, callback = "add_root_success" }))',
        });
    }

    function add_root_success(result) {
        $('.catalogue').prepend(tool.itemHtml(result));
        top.layer.msg("提交成功!");
    }

    function add_child(parentId, rootId) {
        layer.open({
            type: 2,
            title: '添加节点',
            maxmin: true,
            area: ['80%', '80%'],
            shadeClose: true,
            content: '@Html.Raw(Url.Action("AddNode", new { projectGuid = Model.ProjectGuid, callback = "add_child_success" }))' + '&parentGuid=' + parentId + '&rootGuid=' + rootId,
        });
    }

    function add_child_success(result) {
        var array = tree.getOption().series[0].data;
        var node = tool.findNode(result.ParentGuid, array);

        node.children = node.children || [];
        node.children.push(tool.toTreeData([result])[0]);

        tree.refresh(array);
    }
</script>

<script>
    $(function () {
        @if (Model.RootGuid != null && Model.Roots.FirstOrDefault(r => r.Node.ID == Model.RootGuid.Value) != null)
        {
            <text>
            root_id('@Model.RootGuid.Value');
            </text>
        }
        else if (Model.Roots.Length > 0)
        {
            <text>
            root_id('@Model.Roots[0].Node.ID');
            </text>
        }
    })
</script>