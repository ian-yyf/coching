@using Coching.Model;
@using Coching.Model.Front;
@model NodeDetailViewModel

@{
    ViewData["Title"] = "节点详情";
    Layout = "~/Views/Shared/_Popup.cshtml";
}

@if (Model == null)
{
    return;
}

<style>
    .layout-row.card-container {
        align-items: stretch;
    }
</style>

<link type="text/css" rel="stylesheet" href="~/lib/lightgallery/css/lightgallery.min.css" />
<script src="~/lib/lightgallery/js/lightgallery.min.js"></script>
<script src="~/lib/lightgallery/js/lightgallery-all.min.js"></script>
<link rel="stylesheet" href="~/views/coching/node_detail.css">
<script src="~/views/coching/node_detail.js?v=1.4"></script>

<fieldset class="layui-elem-field layui-field-title">
    <legend>基本信息</legend>
</fieldset>

<div class="pane">
    <div class="layui-row layout-row card-container">
        <div class="layui-card flex layout-column">
            <div class="layui-card-header layout-row layout-center-h">
                <div id="NodeName" class="flex ellipsis-1">
                    @Model.Data.Node.Name
                </div>
                <img class="modify-icon" src="~/res/edit.png" title="修改任务" onclick="modify()" />
            </div>
            <div id="NodeDescription" class="layui-card-body text-color-descrip flex">
                @Html.Raw(Model.Data.Node.HtmlDescription)
            </div>
            <div class="node-documents-container">
                @if (Model.Data.Node.Documents.Length > 0)
                {
                    <div class="documents">
                        @foreach (var doc in Model.Data.Node.Documents)
                        {
                            <a href="@doc.Document.Src"><img src="@doc.Document.Src" /></a>
                        }
                    </div>
                }
            </div>
        </div>
        <form class="layui-card flex info-list layui-form">
            <div class="layui-form-item">
                <label class="layui-form-label">状态</label>
                <div class="layui-input-block">
                    <select name="interest" lay-filter="status">
                        @foreach (var item in Model.StatusList)
                        {
                            if (Model.Data.Node.Status == item.Key)
                            {
                                <option value="@item.Key" selected>@item.Value</option>
                            }
                            else
                            {
                                <option value="@item.Key">@item.Value</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="layui-form-item offer @(Model.Data.Node.Coching ? "" : "hidden")">
                <label class="layui-form-label">预估工时</label>
                <div class="layui-input-block">
                    @{
                        FOffer me = null;
                        foreach (var offer in Model.Data.Offers)
                        {
                            <div class="inline-item">
                                @if (offer.User.ID == Model.Me.ID)
                                {
                                    me = offer;
                                    <div class="layout-row layout-center-h clickable" onclick="show_hide(['.offer_edit'], ['.offer'])" title="@($"{offer.User.Name} {offer.EstimatedTime}")">
                                        <img src="@Url.header(offer.User.Header)" />
                                        <div class="offer_info">@offer.EstimatedTime</div>
                                    </div>
                                }
                                else
                                {
                                    <div class="layout-row layout-center-h" title="@($"{offer.User.Name} {offer.EstimatedTime}")">
                                        <img src="@Url.header(offer.User.Header)" />
                                        <div>@offer.EstimatedTime</div>
                                    </div>
                                }
                            </div>
                        }
                        if (me == null)
                        {
                            <div class="inline-item">
                                <div class="layout-row layout-center-h clickable" onclick="show_hide(['.offer_edit'], ['.offer'])" title="@($"{Model.Me.Name} 尚未预估工时")">
                                    <img src="@Url.header(Model.Me.Header)" />
                                    <div class="offer_info">我尚未预估</div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="layui-form-item offer_edit" style="display: none;">
                <label class="layui-form-label">预估工时</label>
                <div class="layui-input-inline">
                    <input type="text" autocomplete="off" placeholder="请填写你的预估工时" class="layui-input" value="@(me == null ? "" : me.EstimatedManHour.ToString())">
                </div>
                <div class="layui-form-mid layui-word-aux">你的预估工时</div>
            </div>
            <div class="layui-form-item offer_edit" style="display: none;">
                <div class="layui-input-block">
                    <button type="button" class="layui-btn" onclick="offer()">确定</button>
                    <button type="button" class="layui-btn layui-btn-primary" onclick="show_hide(['.offer'], ['.offer_edit'])">取消</button>
                </div>
            </div>
            <div class="layui-form-item node_time node_actual_time layout-row">
                <div class="flex">
                    <label class="layui-form-label node_time_label">@(Model.Data.Node.Coching ? "考成工时" : "预估工时")</label>
                    @if (Model.PartnerMe.IsAdmin || !Model.Data.Node.Coching && Model.Me.ID == Model.Data.Node.WorkerGuid)
                    {
                        <div class="layout-row layout-center-h layui-input-block clickable node_time_clickable" onclick="show_hide(['.node_time_edit'], ['.node_time'])">
                            <div class="node_time_info">@Model.Data.Node.EstimatedTime</div>
                        </div>
                    }
                    else
                    {
                        <div class="layout-row layout-center-h layui-input-block">
                            <div class="node_time_info">@Model.Data.Node.EstimatedTime</div>
                        </div>
                    }
                </div>
                <div class="flex">
                    <label class="layui-form-label">实际工时</label>
                    <div class="layout-row layout-center-h layui-input-block clickable" onclick="show_hide(['.node_actual_time_edit'], ['.node_actual_time'])">
                        <div class="node_actual_time_info">@Model.Data.Node.ActualTime</div>
                    </div>
                </div>
            </div>
            <div class="layui-form-item node_time_edit" style="display: none;">
                <label class="layui-form-label">@(Model.Data.Node.Coching ? "考成工时" : "预估工时")</label>
                <div class="layui-input-inline">
                    <input type="text" autocomplete="off" placeholder="@(Model.Data.Node.Coching ? "请确定考成业绩工时" : "请预估工时")" class="layui-input" value="@(Model.Data.Node.EstimatedManHour == 0 ? "" : Model.Data.Node.EstimatedManHour.ToString())">
                </div>
                <div class="layui-form-mid layui-word-aux help-info">@(Model.Data.Node.Coching ? "最终确定的考成业绩工时（管理员）" : "请预估工时（执行者）")</div>
            </div>
            <div class="layui-form-item node_time_edit" style="display: none;">
                <div class="layui-input-block">
                    <button type="button" class="layui-btn" onclick="modify_estimated_manhour()">确定</button>
                    <button type="button" class="layui-btn layui-btn-primary" onclick="show_hide(['.node_time'], ['.node_time_edit'])">取消</button>
                </div>
            </div>
            <div class="layui-form-item node_actual_time_edit" style="display: none;">
                <label class="layui-form-label">实际工时</label>
                <div class="layui-input-inline">
                    <input id="ActualManHour" type="text" autocomplete="off" placeholder="可指定实际工时" class="layui-input" value="@(Model.Data.Node.ActualManHour == 0 ? "" : Model.Data.Node.ActualManHour.ToString())">
                </div>
                <div class="layui-form-mid layui-word-aux">实际工时会自动计算，也可以修改</div>
            </div>
            <div class="layui-form-item node_actual_time_edit" style="display: none;">
                <div class="layui-input-block">
                    <button type="button" class="layui-btn" onclick="modify_actual_manhour()">确定</button>
                    <button type="button" class="layui-btn layui-btn-primary" onclick="show_hide(['.node_actual_time'], ['.node_actual_time_edit'])">取消</button>
                </div>
            </div>
            <div class="layui-form-item layout-row">
                <div class="flex">
                    <label class="layui-form-label">创建者</label>
                    <div class="layout-row layout-center-h layui-input-block">
                        <img src="@Url.header(Model.Data.Node.Creator.Header)" />
                        <div>@Model.Data.Node.Creator.Name</div>
                    </div>
                </div>
                <div class="flex">
                    <label class="layui-form-label">执行者</label>
                    <div class="layout-row layout-center-h layui-input-block clickable" onclick="select_worker(this)">
                        <img id="worker_header" src="@Url.header(Model.Data.Node.Worker?.Header)" />
                        <div id="worker_name">@(Model.Data.Node.Worker == null ? "暂无" : Model.Data.Node.Worker.Name)</div>
                    </div>
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">起止时间</label>
                <div class="layui-input-block layout-row">
                    <input type="text" name="StartTime" id="StartTime" lay-verify="StartTime" placeholder="尚未开始" autocomplete="off" class="layui-input flex" value="@(Model.Data.Node.StartTime == null ? "" : Model.Data.Node.StartTime.Value.ToString("yyyy-MM-dd HH:mm:ss"))">
                    <div style="width: 10px"></div>
                    <input type="text" name="EndTime" id="EndTime" lay-verify="EndTime" placeholder="尚未完成" autocomplete="off" class="layui-input flex" value="@(Model.Data.Node.EndTime == null ? "" : Model.Data.Node.EndTime.Value.ToString("yyyy-MM-dd HH:mm:ss"))">
                </div>
            </div>
        </form>
    </div>
</div>

<fieldset class="layui-elem-field layui-field-title">
    <legend>批注</legend>
</fieldset>

<div class="layui-collapse" lay-filter="notes">
    @foreach (var note in Model.Data.Notes)
    {
        <div id="@note.ID" class="layui-colla-item">
            <h2 class="layui-colla-title layout-row layout-center-h">
                <img src="@Url.header(note.User.Header)" />
                <span class="ellipsis-1 flex name" style="display: none;">@note.User.Name</span>
                <span class="ellipsis-1 flex content">@note.Content</span>
                <span>@note.DisplayCreatedTime</span>
            </h2>
            <div class="layui-colla-content">
                <div class="layout-row layout-top-h">
                    <div class="flex html-content">@Html.Raw(note.HtmlContent)</div>
                    <img class="modify-icon" src="~/res/edit.png" title="修改批注" onclick="modify_note(this)" />
                </div>
                <div class="note-documents-container">
                    @if (note.Documents.Length > 0)
                    {
                        <div class="documents">
                            @foreach (var doc in note.Documents)
                            {
                                <a href="@doc.Document.Src"><img src="@doc.Document.Src" /></a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    <div class="add-note-btn">
        <i class="layui-icon layui-icon-add-1" onclick="add_note()">    添加批注</i>
    </div>
</div>

<script>
    var init_data = {
        notify: function () {
            return '@Model.Notify';
        },
        is_admin: function () {
            return '@Model.PartnerMe.IsAdmin' == 'True';
        },
        me_id: function () {
            return '@Model.Me.ID';
        }
    }

    function modify() {
        layer.open({
            type: 2,
            title: '修改',
            maxmin: true,
            area: ['80%', '80%'],
            shadeClose: true,
            content: '@Html.Raw(Url.Action("ModifyNode", new { id = Model.Data.Node.ID, callback = "modify_success" }))',
        });
    }

    function modify_estimated_manhour() {
        var value = $('.node_time_edit input').val();
        $.post('@Html.Raw(Url.Action("ModifyEstimatedManHour"))', {
            id: '@Model.Data.Node.ID',
            estimatedManHour: value
        }, function (result) {
            if (!result.Success) {
                top.layer.msg(result.Message);
            }
            else if (result.Body.EstimatedManHour != value) {
                top.layer.msg('修改失败，请刷新页面');
            }
            else {
                $('.node_time .node_time_info').html(result.Body.EstimatedTime);
                parent.@(Model.Notify)(result.Body);
                show_hide(['.node_time'], ['.node_time_edit']);
            }
        });
    }

    function modify_actual_manhour() {
        var value = $('.node_actual_time_edit input').val();
        $.post('@Html.Raw(Url.Action("ModifyActualManHour"))', {
            id: '@Model.Data.Node.ID',
            actualManHour: value
        }, function (result) {
            if (!result.Success) {
                top.layer.msg(result.Message);
            }
            else if (result.Body.ActualManHour != value) {
                top.layer.msg('修改失败，请刷新页面');
            }
            else {
                $('.node_actual_time .node_actual_time_info').html(result.Body.ActualTime);
                parent.@(Model.Notify)(result.Body);
                show_hide(['.node_actual_time'], ['.node_actual_time_edit']);
            }
        });
    }

    function offer() {
        var value = $('.offer_edit input').val();
        $.post('@Html.Raw(Url.Action("Offer"))', {
            id: '@Model.Data.Node.ID',
            estimatedManHour: value
        }, function (result) {
            if (!result.Success) {
                top.layer.msg(result.Message);
            }
            else if (result.Body.EstimatedManHour != value) {
                top.layer.msg('修改失败，请刷新页面');
            }
            else {
                $('.offer .offer_info').html(result.Body.EstimatedTime);
                $('.offer .clickable').attr('title', result.Body.User.Name + ' ' + result.Body.EstimatedTime);
                show_hide(['.offer'], ['.offer_edit']);
            }
        });
    }

    function select_worker(e) {
        var n = '';
        @foreach (var p in Model.Partners)
        {
            <text>
            n += '<li id="@p.User.ID" class="layout-row layout-center-h"><img src="@Url.header(p.User.Header)"/>@p.User.Name</li>'
            </text>
        }

        n = '<ul>' + n + '</ul>';
        menu = layui.layer.tips(n, $(e), {
            tips: 3,
            time: 0,
            fixed: !0,
            skin: "layui-box click-menu",
            success: function (i) {
                i.find("li").on("mousedown",
                    function (i) {
                        layui.stope(i);
                    }).on("click", function () {
                        var id = $(this).attr('id');
                        $.post('@Html.Raw(Url.Action("ModifyWorker"))', {
                            id: '@Model.Data.Node.ID',
                            userGuid: id
                        }, function (result) {
                            if (!result.Success) {
                                top.layer.msg(result.Message);
                            }
                            else if (result.Body.WorkerGuid != id) {
                                top.layer.msg('修改失败，请刷新页面');
                            }
                            else {
                                modify_worker_success(result.Body);
                            }
                        });

                        closeMenu();
                    })
            }
        });
        $(document).off("mousedown", closeMenu).on("mousedown", closeMenu);
        $(window).off("resize", closeMenu).on("resize", closeMenu);
    }

    function closeMenu() {
        if (menu) {
            layui.layer.close(menu);
            menu = null;
        }
    }

    function add_note() {
        layer.open({
            type: 2,
            title: '添加批注',
            maxmin: true,
            area: ['80%', '80%'],
            shadeClose: true,
            content: '@Html.Raw(Url.Action("AddNote", new { nodeGuid = Model.Data.Node.ID, callback = "add_note_success" }))',
        });
    }

    function add_note_success(note) {
        $('.layui-collapse').prepend('<div id="' + note.ID + '" class="layui-colla-item">'
            + '<h2 class="layui-colla-title layout-row layout-center-h">'
            + '<img src="' + header(note.User.Header) + '" />'
            + '<span class="ellipsis-1 flex name">' + note.User.Name + '</span>'
            + '<span class="ellipsis-1 flex content" style="display: none;">' + note.Content + '</span>'
            + '<span>' + note.DisplayCreatedTime + '</span>'
            + '<i class="layui-icon layui-colla-icon"></i>'
            + '</h2>'
            + '<div class="layui-colla-content layui-show">'
            + '<div class="layout-row layout-top-h">'
            + '<div class="flex html-content">' + note.HtmlContent + '</div>'
            + '<img class="modify-icon" src="@Url.Content("~/res/edit.png")" title="修改批注" onclick="modify_note(this)" />'
            + '</div>'
            + '<div class="note-documents-container">'
            + tool.documentsInnerHtml(note.Documents)
            + '</div>'
            + '</div>'
            + '</div>'
        );

        $('#' + note.ID + ' .note-documents-container .documents').lightGallery({
            share: false
        });
    }

    function modify_note(e) {
        var id = $(e).parents('*[id]').attr('id');
        layer.open({
            type: 2,
            title: '修改批注',
            maxmin: true,
            area: ['80%', '80%'],
            shadeClose: true,
            content: '@Html.Raw(Url.Action("ModifyNote", new { callback = "modify_note_success" }))' + '&id=' + id,
        });
    }

    function modify_note_success(note, id) {
        if (note) {
            $('#' + note.ID + ' .content').html(note.Content);
            $('#' + note.ID + ' .html-content').html(note.HtmlContent);
            $('#' + note.ID + ' .note-documents-container').html(tool.documentsInnerHtml(note.Documents));

            $('#' + note.ID + ' .note-documents-container .documents').lightGallery({
                share: false
            });
        }
        else {
            $('#' + id).remove();
        }
    }
</script>

<script>
    function use_layui() {
        layui.use(['element', 'layer', 'form', 'layedit', 'laydate'], function() {
            var element = layui.element, form = layui.form, laydate = layui.laydate;
            element.on('collapse(notes)', function (data) {
                if (data.show) {
                    $(data.title).children('.name').show();
                    $(data.title).children('.content').hide();
                }
                else {
                    $(data.title).children('.name').hide();
                    $(data.title).children('.content').show();
                }
            });

            form.on('select(status)', function (data) {
                $.post('@Html.Raw(Url.Action("ModifyStatus"))', {
                    id: '@Model.Data.Node.ID',
                    status: data.value
                }, function (result) {
                    if (!result.Success) {
                        top.layer.msg(result.Message);
                    }
                    else if (result.Body.Status != data.value) {
                        top.layer.msg('修改失败，请刷新页面');
                    }
                    else {
                        $('#StartTime').val(result.Body.StartTime);
                        $('#EndTime').val(result.Body.EndTime);
                        $('.node_actual_time .node_actual_time_info').html(result.Body.ActualTime);
                        $('.node_actual_time_edit input').val(result.Body.ActualManHour == 0 ? '' : result.Body.ActualManHour);
                        parent.@(Model.Notify)(result.Body);
                    }
                });
            });

            laydate.render({
                elem: '#StartTime',
                type: 'datetime',
                format: 'yyyy-MM-dd HH:mm:ss',
                calendar: true,
                done: function (value, date, endDate) {
                    $.post('@Html.Raw(Url.Action("ModifyStartTime"))', {
                        id: '@Model.Data.Node.ID',
                        startTime: value
                    }, function (result) {
                        if (!result.Success) {
                            top.layer.msg(result.Message);
                        }
                        else if ((result.Body.StartTime || '') != value) {
                            top.layer.msg('修改失败，请刷新页面');
                        }
                        else {
                            $('.node_actual_time .node_actual_time_info').html(result.Body.ActualTime);
                            $('.node_actual_time_edit input').val(result.Body.ActualManHour == 0 ? '' : result.Body.ActualManHour);
                            parent.@(Model.Notify)(result.Body);
                        }
                    });
                }
            });
            laydate.render({
                elem: '#EndTime',
                type: 'datetime',
                format: 'yyyy-MM-dd HH:mm:ss',
                calendar: true,
                done: function (value, date, endDate) {
                    $.post('@Html.Raw(Url.Action("ModifyEndTime"))', {
                        id: '@Model.Data.Node.ID',
                        endTime: value
                    }, function (result) {
                        if (!result.Success) {
                            top.layer.msg(result.Message);
                        }
                        else if ((result.Body.EndTime || '') != value) {
                            top.layer.msg('修改失败，请刷新页面');
                        }
                        else {
                            $('.node_actual_time .node_actual_time_info').html(result.Body.ActualTime);
                            $('.node_actual_time_edit input').val(result.Body.ActualManHour == 0 ? '' : result.Body.ActualManHour);
                            parent.@(Model.Notify)(result.Body);
                        }
                    });
                }
            });
        });
    }

    use_layui();

    $(document).ready(function() {
        $('.documents').lightGallery({
            share: false
        });
    });
</script>